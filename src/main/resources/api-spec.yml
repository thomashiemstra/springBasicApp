openapi: 3.0.0
info:
  version: 1.0.0-0
  title: books api
  description: api for books

servers:
  - url: /auth0

security:
  - bearerAuth: []

paths:
  /login:
    post:
      description: "login an auth0 user"
      operationId: "Authenticate"
      tags:
        - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth0LoginRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth0LoginResponse'
        '405':
          description: Invalid input

  /book/{bookId}:
    get:
      description: "get a book by id"
      operationId: "get Book"
      parameters:
        - $ref: '#/components/parameters/bookIdParam'
      tags:
        - Books
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '405':
          description: Invalid input
  /saveBook:
    post:
      description: "save a new book"
      operationId: "save book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      tags:
        - Books
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input

  /addFavouriteBook:
    post:
      description: "add a new book to the favourites of the logged in user"
      operationId: "add favourite book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavouriteRequest'
      tags:
        - Users
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input

  /removeFavouriteBook:
    post:
      description: "remove an existing book in the favourites of the logged in user"
      operationId: "remove favourite book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavouriteRequest'
      tags:
        - Users
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input

  /getFavouriteBooks:
    get:
      description: "get all favourite books for the logged in user"
      operationId: "get favourites"
      tags:
        - Users
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '405':
          description: Invalid input


components:
  parameters:
    bookIdParam:
      in: path
      name: bookId
      required: true
      schema:
        type: integer

  schemas:
    Auth0LoginRequest:
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    Auth0LoginResponse:
      properties:
        jwtToken:
          type: string

    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        averageRating:
          type: string
        isbn:
          type: string
        isbn13:
          type: string
        language_code:
          type: string
        num_pages:
          type: string
        ratings_count:
          type: string
        text_reviews_count:
          type: string
        publication_date:
          type: string
          format: date
        publisher:
          $ref: '#/components/schemas/Publisher'


    Author:
      type: object
      properties:
        id:
          type: integer
        authorName:
          type: string

    Publisher:
      type: object
      properties:
        id:
          type: integer
        publisherName:
          type: string

    FavouriteRequest:
      type: object
      properties:
        id:
          type: integer
